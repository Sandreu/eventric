{"name":"eventric.js","tagline":"Build JavaScript applications based on DDD, CQRS and EventSourcing","body":"## eventric.js [![Build Status](https://travis-ci.org/efacilitation/eventric.svg?branch=master)](https://travis-ci.org/efacilitation/eventric)\r\n\r\nBuild JavaScript applications based on DDD, CQRS and EventSourcing\r\n\r\nRuns on NodeJS and modern Browsers. Therefore it's easy to share code between Server and Client.\r\n\r\n\r\n### Why?\r\n\r\nBecause [MVC evolved](http://sixsteps.ghost.io/mvc-evolved/).\r\n\r\n[![MVC evolved](http://img.youtube.com/vi/XSc7NPedAxw/0.jpg)](http://www.youtube.com/watch?v=XSc7NPedAxw)\r\n\r\n\r\n## Features\r\n\r\n* Well defined `Context` Interface\r\n* Capture `DomainEvents` explicitly\r\n* Persistent `Projections`\r\n* Multiple `Store Adapters`\r\n* Automated saving and applying of DomainEvents\r\n* Support for Occasionally Connected Applications\r\n\r\n\r\n## Philosophy\r\n\r\n* Emphasize [Domain-driven design](https://www.goodreads.com/book/show/179133.Domain_Driven_Design), [Event-driven architecture](https://www.goodreads.com/book/show/12369902-event-centric) and [Task-based UIs](http://cqrs.wordpress.com/documents/task-based-ui).\r\n* Put the the Domain Model in the very center of your Layered Architecture ([Onion](http://jeffreypalermo.com/blog/the-onion-architecture-part-1/) / [Hexagonal](http://alistair.cockburn.us/Hexagonal+architecture))\r\n* Explicitly set boundaries for parts of your application ([BoundedContexts](https://en.wikipedia.org/wiki/Domain-driven_design#Bounded_context) / [MicroServices](http://martinfowler.com/articles/microservices.html))\r\n* Separation of concerns using Commands and Queries ([CQRS](http://msdn.microsoft.com/en-us/library/jj554200.aspx))\r\n* Capture all changes to your application state as a sequence of events ([EventSourcing](http://martinfowler.com/eaaDev/EventSourcing.html) / [DomainEvents](http://www.udidahan.com/2009/06/14/domain-events-salvation/))\r\n\r\n\r\n## A Note on DDD\r\n\r\nPlease keep in mind that eventric.js supplies you only with a structure that has common-sense in the DDD+CQRS community. But you really should get to know the tactical side of DDD as well, which is at least as important (and fun!) as the technical BuildingBlocks.\r\n\r\n\r\n## More Infos\r\n\r\nhttps://github.com/efacilitation/eventric\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}